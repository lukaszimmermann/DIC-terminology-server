# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Swagger - UI
GET            /                                                                     controllers.Assets.at(path="/public/swagger-ui", file="index.html")

# Swagger - API documentation
GET            /api-docs                                                             controllers.ApiHelpController.getResources
GET            /api-docs/bioportal                                                   controllers.ApiHelpController.getResource(path = "/bioportal")

### Search ###
GET            /bioportal/search                                                     controllers.TerminologyController.search(q: String, scope: String ?= "all", sources: String ?= "", suggest: Boolean ?= false, source: String ?="", subtree_root_id: String ?="", max_depth: Int?=1, page: Int ?= 1, page_size: Int ?= 50)

### Ontologies ###
GET            /bioportal/ontologies                                                 controllers.TerminologyController.findAllOntologies()
GET            /bioportal/ontologies/:id                                             controllers.TerminologyController.findOntology(id: String)
GET            /bioportal/ontologies/:ontology/classes/roots                         controllers.TerminologyController.findRootClasses(ontology: String)

### Classes ###
POST           /bioportal/ontologies/:ontology/classes                               controllers.TerminologyController.createClass(ontology: String)
GET            /bioportal/classes/provisional                                        controllers.TerminologyController.findAllProvisionalClasses()
GET            /bioportal/ontologies/:ontology/classes/provisional                   controllers.TerminologyController.findAllProvisionalClassesForOntology(ontology: String)
GET            /bioportal/ontologies/:ontology/classes/:id                           controllers.TerminologyController.findClass(id: String, ontology: String)
PATCH          /bioportal/classes/:id                                                controllers.TerminologyController.updateClass(id: String)
DELETE         /bioportal/classes/:id                                                controllers.TerminologyController.deleteClass(id: String)
GET            /bioportal/ontologies/:ontology/classes/:id/tree                      controllers.TerminologyController.findClassTree(id: String, ontology: String)
GET            /bioportal/ontologies/:ontology/classes/:id/children                  controllers.TerminologyController.findClassChildren(id: String, ontology: String, page: Int ?= 1, page_size: Int ?= 50)
GET            /bioportal/ontologies/:ontology/classes/:id/parents                   controllers.TerminologyController.findClassParents(id: String, ontology: String)

### Relations ###
POST           /bioportal/relations                                                  controllers.TerminologyController.createRelation()
GET            /bioportal/relations/:id                                              controllers.TerminologyController.findRelation(id: String)
#PATCH          /bioportal/relations/provisional                                      controllers.TerminologyController.updateProvisionalRelation()
DELETE         /bioportal/relations/:id                                              controllers.TerminologyController.deleteRelation(id: String)

### Value Set Collections ###
GET            /bioportal/vs-collections                                             controllers.TerminologyController.findAllVSCollections(include_details: Boolean ?= false)

### Values ###
POST           /bioportal/vs-collections/:vs_collection/value-sets/:vs/values        controllers.TerminologyController.createValue(vs_collection: String, vs: String)
GET            /bioportal/vs-collections/:vs_collection/value-sets/:vs/values        controllers.TerminologyController.findValuesByValueSet(vs: String, vs_collection: String, page: Int ?= 1, page_size: Int ?= 50)
GET            /bioportal/vs-collections/:vs_collection/values/:id                   controllers.TerminologyController.findValue(id: String, vs_collection: String)
PATCH          /bioportal/values/:id                                                 controllers.TerminologyController.updateValue(id: String)
DELETE         /bioportal/values/:id                                                 controllers.TerminologyController.deleteValue(id: String)

### Value Sets ###
POST           /bioportal/vs-collections/:vs_collection/value-sets                   controllers.TerminologyController.createValueSet(vs_collection: String)
GET            /bioportal/vs-collections/:vs_collection/value-sets/:id               controllers.TerminologyController.findValueSet(id: String, vs_collection: String)
GET            /bioportal/vs-collections/:vs_collection/value-sets                   controllers.TerminologyController.findValueSetsByVsCollection(vs_collection : String, page: Int ?= 1, page_size: Int ?= 50)
GET            /bioportal/value-sets                                                 controllers.TerminologyController.findAllValueSets()
PATCH          /bioportal/value-sets/:id                                             controllers.TerminologyController.updateValueSet(id: String)
DELETE         /bioportal/value-sets/:id                                             controllers.TerminologyController.deleteValueSet(id: String)

## Other routes

# For CORS - preflight request
OPTIONS        /*all                                                                 controllers.Application.preflight(all)

## Map static resources from the /public folder to the /assets URL path
GET            /assets/*file                                                         controllers.Assets.at(path="/public", file)

## Map relevant static resources from the /public/swagger-ui folder to /assets corresponding path - Swagger - UI
#GET            /css/*file                 controllers.Assets.at(path="/public/swagger-ui/css", file)
#GET            /images/*file              controllers.Assets.at(path="/public/swagger-ui/images", file)
#GET            /lib/*file                 controllers.Assets.at(path="/public/swagger-ui/lib", file)
#GET            /*file                     controllers.Assets.at(path="/public/swagger-ui", file)
GET            /*file                                                                controllers.Assets.at(path="/public/swagger-ui", file)

